<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- favicon -->
    <link rel="icon" type="image/png" sizes="16x16" href="/img/favicon/favicon.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="theme-color" content="#ffffff">
    <!-- link reset -->
    <link rel="stylesheet" href="/css/reset.css">
    <!-- link css -->
    <link rel="stylesheet" href="/css/style.css">
    <!-- link css framework Bootstrap versão 5.3 SITE EM INGLÊS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css">
    <!-- link js framework Bootstrap versão 5.3 SITE EM INGLÊS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

    <title>{{pageTitle}}</title>
</head>

<body style="{{colorTheme}}">
    {{#if error}}
    <div id="msgContainer">
        <div class="msg_error show">
            <div class="msg-header">
                {{error}}
                {{!-- <button type="button" class="close">
                    <span aria-hidden="true">&times;</span>
                </button> --}}
            </div>
        </div>
    </div>
    {{else}}
    {{/if}}
    {{>_msg}}
    {{>_noscript}}
    {{>_vlibras}}
    {{{body}}}

    <script>
        function aplicarFiltros() {
            var elementsToChange = document.querySelectorAll('.content, .sidebar, .filter-overlay, .logoimg, .menu-mobile');

            var storedDessaturationStatus = localStorage.getItem("Dessaturation");
            var storedInvContrastStatus = localStorage.getItem("InverseContrast");

            if (storedDessaturationStatus === "true") {
                elementsToChange.forEach(element => {
                    element.style.filter = `grayscale(100%)`;
                });
            } else if (storedInvContrastStatus === "true") {
                elementsToChange.forEach(element => {
                    element.style.filter = `invert(100%)`;
                });
            } else {
                elementsToChange.forEach(element => {
                    element.style.filter = `none`;
                });
            }
        }
        aplicarFiltros();

        function aplicarFonte() {
            var storedFontStatus = localStorage.getItem("fonte");

            if (storedFontStatus === "true") {
                document.body.classList.add('dislexia');
            } else {
                document.body.classList.remove('dislexia');
            }
        }
        aplicarFonte()

        const divVLibras = document.getElementById('vlibras');

        function lerCondicaoVLibras() {
            const condicao = localStorage.getItem('VLibras');
            if (condicao === 'true') {
                divVLibras.classList.add('enabled');
            } else {
                divVLibras.classList.remove('enabled')
            }
        }

        lerCondicaoVLibras();
    </script>

    <!-- Link js -->
    <script src="https://kit.fontawesome.com/e1f7a1b8d0.js" crossorigin="anonymous"></script>
    <script src="/js/script.js"></script>
    <script src="/js/acd.js"></script>
    <script src="/js/nome.js"></script>
    <script src="/js/profileImage.js"></script>
</body>
</html>